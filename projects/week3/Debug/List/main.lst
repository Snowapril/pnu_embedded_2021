###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       16/Sep/2021  21:43:51
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\pnu1\Desktop\embedded_2\project_test\user\main.c
#    Command line =  
#        -f C:\Users\pnu1\AppData\Local\Temp\EWB8FB.tmp
#        (C:\Users\pnu1\Desktop\embedded_2\project_test\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Debug\List -o
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Libraries\CMSIS\ -I
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Libraries\CMSIS\DeviceSupport\
#        -I
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\pnu1\Desktop\embedded_2\project_test\user\inc\ -I
#        C:\Users\pnu1\Desktop\embedded_2\project_test\user\ -I
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Libraries\CMSIS\DeviceSupport\Startup\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Debug\List\main.lst
#    Object file  =  
#        C:\Users\pnu1\Desktop\embedded_2\project_test\Debug\Obj\main.o
#
###############################################################################

C:\Users\pnu1\Desktop\embedded_2\project_test\user\main.c
      1          

   \                                 In section .text, align 4, keep-with-next
      2          int main(void)
      3          {
      4            *(volatile unsigned int *)0x40021018 |= 0x30; // port c, d clock enable
   \                     main: (+1)
   \   00000000   0x483E             LDR.N    R0,??main_0      ;; 0x40021018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0030      ORRS     R0,R0,#0x30
   \   00000008   0x493C             LDR.N    R1,??main_0      ;; 0x40021018
   \   0000000A   0x6008             STR      R0,[R1, #+0]
      5            // led configuration
      6            *(volatile unsigned int *)0x40011400 &= ~0xf00fff00; 
   \   0000000C   0x483C             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   0000000E   0x6801             LDR      R1,[R0, #+0]
   \   00000010   0x483C             LDR.N    R0,??main_0+0x8  ;; 0xff000ff
   \   00000012   0x4001             ANDS     R1,R0,R1
   \   00000014   0x483A             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   00000016   0x6001             STR      R1,[R0, #+0]
      7            *(volatile unsigned int *)0x40011400 |= 0x30033300;
   \   00000018   0x4839             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   0000001A   0x6801             LDR      R1,[R0, #+0]
   \   0000001C   0x483A             LDR.N    R0,??main_0+0xC  ;; 0x30033300
   \   0000001E   0x4301             ORRS     R1,R0,R1
   \   00000020   0x4837             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   00000022   0x6001             STR      R1,[R0, #+0]
      8            // joystick configuration
      9            *(volatile unsigned int *)0x40011000 &= ~0xffff00;
   \   00000024   0x4839             LDR.N    R0,??main_0+0x10  ;; 0x40011000
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF36F 0x2017      BFC      R0,#+8,#+16
   \   0000002C   0x4937             LDR.N    R1,??main_0+0x10  ;; 0x40011000
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     10            *(volatile unsigned int *)0x40011000 |= 0x888800;
   \   00000030   0x4836             LDR.N    R0,??main_0+0x10  ;; 0x40011000
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF440 0x0008      ORR      R0,R0,#0x880000
   \   00000038   0xF450 0x4008      ORRS     R0,R0,#0x8800
   \   0000003C   0x4933             LDR.N    R1,??main_0+0x10  ;; 0x40011000
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0xE00B             B.N      ??main_1
     11            while (1) {
     12              // port c 0x40011000
     13              // down 2
     14              if (!(*(volatile unsigned int *)0x40011008 & 0x4))
     15              {
     16                *(volatile unsigned int *)0x40011410 |= 0x940000; // 1001 0100
     17                *(volatile unsigned int *)0x40011410 |= 0x8;
     18              }
     19              else
     20              {
     21                *(volatile unsigned int *)0x40011410 |= 0x080000;
     22              }
     23              // up 5
     24              if (!(*(volatile unsigned int *)0x40011008 & 0x20))
     25              {
     26                *(volatile unsigned int *)0x40011410 |= 0x980000;
     27                *(volatile unsigned int *)0x40011410 |= 0x4;
     28              }
     29              else
     30              {
     31                *(volatile unsigned int *)0x40011410 |= 0x040000;
     32              }
     33              // left 3
     34              if (!(*(volatile unsigned int *)0x40011008 & 0x8))
     35              {
     36                *(volatile unsigned int *)0x40011410 |= 0x8C0000;
     37                *(volatile unsigned int *)0x40011410 |= 0x10;
     38              }
     39              else
     40              {
     41                *(volatile unsigned int *)0x40011410 |= 0x100000;
     42              }
     43              // right 4
     44              if (!(*(volatile unsigned int *)0x40011008 & 0x10))
     45              {
     46                *(volatile unsigned int *)0x40011410 |= 0x1C0000;
   \                     ??main_2: (+1)
   \   00000042   0x4833             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF450 0x10E0      ORRS     R0,R0,#0x1C0000
   \   0000004A   0x4931             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   0000004C   0x6008             STR      R0,[R1, #+0]
     47                *(volatile unsigned int *)0x40011410 |= 0x80;
   \   0000004E   0x4830             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000056   0x492E             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   00000058   0x6008             STR      R0,[R1, #+0]
     48              }
   \                     ??main_1: (+1)
   \   0000005A   0x482E             LDR.N    R0,??main_0+0x18  ;; 0x40011008
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x0740             LSLS     R0,R0,#+29
   \   00000060   0xD40C             BMI.N    ??main_3
   \   00000062   0x482B             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF450 0x0014      ORRS     R0,R0,#0x940000
   \   0000006A   0x4929             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   0000006C   0x6008             STR      R0,[R1, #+0]
   \   0000006E   0x4828             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000076   0x4926             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   00000078   0x6008             STR      R0,[R1, #+0]
   \   0000007A   0xE005             B.N      ??main_4
   \                     ??main_3: (+1)
   \   0000007C   0x4824             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000084   0x4922             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   00000086   0x6008             STR      R0,[R1, #+0]
   \                     ??main_4: (+1)
   \   00000088   0x4822             LDR.N    R0,??main_0+0x18  ;; 0x40011008
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0x0680             LSLS     R0,R0,#+26
   \   0000008E   0xD40C             BMI.N    ??main_5
   \   00000090   0x481F             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF450 0x0018      ORRS     R0,R0,#0x980000
   \   00000098   0x491D             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   0000009A   0x6008             STR      R0,[R1, #+0]
   \   0000009C   0x481C             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000A4   0x491A             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   000000A6   0x6008             STR      R0,[R1, #+0]
   \   000000A8   0xE005             B.N      ??main_6
   \                     ??main_5: (+1)
   \   000000AA   0x4819             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   000000B2   0x4917             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   000000B4   0x6008             STR      R0,[R1, #+0]
   \                     ??main_6: (+1)
   \   000000B6   0x4817             LDR.N    R0,??main_0+0x18  ;; 0x40011008
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x0700             LSLS     R0,R0,#+28
   \   000000BC   0xD40C             BMI.N    ??main_7
   \   000000BE   0x4814             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0xF450 0x000C      ORRS     R0,R0,#0x8C0000
   \   000000C6   0x4912             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   000000C8   0x6008             STR      R0,[R1, #+0]
   \   000000CA   0x4811             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000D2   0x490F             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   000000D4   0x6008             STR      R0,[R1, #+0]
   \   000000D6   0xE005             B.N      ??main_8
   \                     ??main_7: (+1)
   \   000000D8   0x480D             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0xF450 0x1080      ORRS     R0,R0,#0x100000
   \   000000E0   0x490B             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   000000E2   0x6008             STR      R0,[R1, #+0]
   \                     ??main_8: (+1)
   \   000000E4   0x480B             LDR.N    R0,??main_0+0x18  ;; 0x40011008
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0x06C0             LSLS     R0,R0,#+27
   \   000000EA   0xD5AA             BPL.N    ??main_2
     49              else
     50              {
     51                *(volatile unsigned int *)0x40011410 |= 0x800000;
   \   000000EC   0x4808             LDR.N    R0,??main_0+0x14  ;; 0x40011410
   \   000000EE   0x6800             LDR      R0,[R0, #+0]
   \   000000F0   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   000000F4   0x4906             LDR.N    R1,??main_0+0x14  ;; 0x40011410
   \   000000F6   0x6008             STR      R0,[R1, #+0]
   \   000000F8   0xE7AF             B.N      ??main_1
   \   000000FA   0xBF00             Nop      
   \                     ??main_0:
   \   000000FC   0x40021018         DC32     0x40021018
   \   00000100   0x40011400         DC32     0x40011400
   \   00000104   0x0FF000FF         DC32     0xff000ff
   \   00000108   0x30033300         DC32     0x30033300
   \   0000010C   0x40011000         DC32     0x40011000
   \   00000110   0x40011410         DC32     0x40011410
   \   00000114   0x40011008         DC32     0x40011008
     52              }
     53            }
     54            return 0;
                   ^
Warning[Pe111]: statement is unreachable
     55          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   main


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     280  main

 
 280 bytes in section .text
 
 280 bytes of CODE memory

Errors: none
Warnings: 1
